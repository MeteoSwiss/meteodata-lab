pipeline {
    options {
    // the variable $WORKSPACE is assigned dynamically at the beginning of every stage
    // and might change depending on the number of concurrent builds active.
    // We can only allow 1 concurrent build to have a consistent access to $WORKSPACE
    // Otherwise we should use stash/unstash for the miniconda installation
        disableConcurrentBuilds()
    }
    agent {
        label 'balfrin'
    }

    post {
        always{
            echo 'Cleaning up workspace'
            deleteDir()
        }
    }
    stages {
        stage('spack') {
            steps {
                sh '''#!/usr/bin/env bash
                set -e
                spack_c2sm_url=https://github.com/C2SM/spack-c2sm.git
                spack_c2sm_tag=v0.20.1.9
                spack_c2sm_dir=${WORKSPACE}/s
                git clone --depth 1 --recurse-submodules -b ${spack_c2sm_tag} ${spack_c2sm_url} ${spack_c2sm_dir}
                . ${spack_c2sm_dir}/setup-env.sh
                spack env activate -p ${WORKSPACE}/spack-env
                spack mirror add iwf2-mirror /store_new/mch/msopr/icon_workflow_2/spack-mirror
                spack install --no-check-signature --no-checksum
                '''
            }
        }
        stage('setup env') {
            steps {
                sh '''#!/usr/bin/env bash
                set -x
                bash tools/setup_poetry.sh
                '''
            }
        }
        stage('test') {
            steps {
                sh '''#!/usr/bin/env bash
                .venv/bin/pytest -m "not ifs" tests
                '''
                sh '''#!/usr/bin/env bash
                .venv/bin/pytest -m ifs tests
                '''
                sh '''#!/usr/bin/env bash
                .venv/bin/python -m mypy src tests
                '''
            }
        }
    }
}
